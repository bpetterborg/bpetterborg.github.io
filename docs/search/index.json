[{"content":"Table of Contents  Introduction Getting Started Prepare your environment Building your site  Introduction I had a bit of difficulty setting up Hugo to work with Github Pages, so I decided to document how I was able to make it work.\nGetting Started This guide assumes you already have a Hugo site. If you do not, you can learn how to here.\nYou will also need a Github Pages repo setup, these are pretty simple, and you can use this guide.\nBoth of these are pretty simple to setup, but if you have any questions, ask Google first, but if that doesn\u0026rsquo;t work, leave me an email\nPrepare your environment After you\u0026rsquo;ve created your site repo, delete the contents. Once that\u0026rsquo;s done, head to wherever you wish to keep it on your local machine and clone it.\nOnce you\u0026rsquo;re done, cd to it and create an empty file named .nojekyll\ntouch .nojekyll After that, go ahead and generate your site with Hugo. If you\u0026rsquo;ve already made your site and want to migrate to Github Pages, just copy the contents over to the new repo.\nNow, we\u0026rsquo;ll need to edit the config.toml to configure the site to be compatible with Github Pages.\nvim config.toml Add the following line, under the top set of variables\npublishDir = \u0026#34;docs\u0026#34; Go to your Repo\u0026gt;Settings\u0026gt;Github Pages\u0026gt; and set Source directory to /docs\nBuilding your site Go to the folder where you have your site and run hugo.\nNow that your site has been built, add all, commit, and push to Github.\n","date":"2021-03-25T18:53:44-04:00","image":"https://www.ben-p.dev/p/host-hugo-w/-github-pages/header_hu9bb0980aa84ffcba061aef146137027a_88394_120x120_fill_box_smart1_2.png","permalink":"https://www.ben-p.dev/p/host-hugo-w/-github-pages/","title":"Host Hugo w/ Github Pages"}]